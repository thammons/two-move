/// <reference types="node" />
import IReporter from './ireporter.js';
import Benchmarker from '../services/benchmarker.js';
import ConsoleReporter from './console_reporter.js';
import Test from '../runnables/test.js';
import Context from '../runnables/context.js';
import { Writable } from 'stream';
export default class BenchmarkReporter extends ConsoleReporter {
    protected readonly testBenchmarker: Benchmarker;
    protected readonly contextBenchmarkerFactory: () => Benchmarker;
    private contextBenchmarkers;
    constructor(summaryReporter?: IReporter, outStream?: Writable, errorStream?: Writable, testBenchmarker?: Benchmarker, contextBenchmarkerFactory?: () => Benchmarker);
    startContext(context: Context): void;
    stopContext(): void;
    startTest(test: Test): void;
    stopTest(error?: Error): void;
}
