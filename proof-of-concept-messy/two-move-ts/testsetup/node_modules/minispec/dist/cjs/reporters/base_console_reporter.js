"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var base_reporter_js_1 = require("./base_reporter.js");
var BaseConsoleReporter = /** @class */ (function (_super) {
    __extends(BaseConsoleReporter, _super);
    function BaseConsoleReporter(outStream, errorStream) {
        var _this = _super.call(this) || this;
        _this.outStream = outStream || process.stdout;
        _this.errorStream = errorStream || process.stderr;
        return _this;
    }
    BaseConsoleReporter.prototype.log = function (message) {
        this.outStream.write("".concat(message, "\n"));
    };
    BaseConsoleReporter.prototype.error = function (message) {
        this.errorStream.write("".concat(message, "\n"));
    };
    BaseConsoleReporter.prototype.green = function (message) {
        return "\u001B[32m".concat(message, "\u001B[0m");
    };
    BaseConsoleReporter.prototype.red = function (message) {
        return "\u001B[31m".concat(message, "\u001B[0m");
    };
    BaseConsoleReporter.prototype.yellow = function (message) {
        return "\u001B[33m".concat(message, "\u001B[0m");
    };
    BaseConsoleReporter.prototype.gray = function (message) {
        return "\u001B[90m".concat(message, "\u001B[0m");
    };
    return BaseConsoleReporter;
}(base_reporter_js_1.default));
exports.default = BaseConsoleReporter;
