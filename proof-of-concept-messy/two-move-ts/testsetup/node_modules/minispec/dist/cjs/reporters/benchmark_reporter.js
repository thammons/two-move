"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var benchmarker_js_1 = require("../services/benchmarker.js");
var console_reporter_js_1 = require("./console_reporter.js");
var BenchmarkReporter = /** @class */ (function (_super) {
    __extends(BenchmarkReporter, _super);
    function BenchmarkReporter(summaryReporter, outStream, errorStream, testBenchmarker, contextBenchmarkerFactory) {
        if (testBenchmarker === void 0) { testBenchmarker = new benchmarker_js_1.default(); }
        if (contextBenchmarkerFactory === void 0) { contextBenchmarkerFactory = function () { return new benchmarker_js_1.default(); }; }
        var _this = _super.call(this, summaryReporter, outStream, errorStream) || this;
        _this.testBenchmarker = testBenchmarker;
        _this.contextBenchmarkerFactory = contextBenchmarkerFactory;
        _this.contextBenchmarkers = [];
        return _this;
    }
    BenchmarkReporter.prototype.startContext = function (context) {
        var benchmarker = this.contextBenchmarkerFactory();
        benchmarker.start();
        this.contextBenchmarkers.push(benchmarker);
        _super.prototype.startContext.call(this, context);
    };
    BenchmarkReporter.prototype.stopContext = function () {
        if (this.activeContext) {
            var benchmarker = this.contextBenchmarkers.pop();
            this.log(this.indent("".concat(this.gray("".concat(this.activeContext.name, ":")), " \u23F1\uFE0F  ").concat(benchmarker === null || benchmarker === void 0 ? void 0 : benchmarker.getDuration(), " milliseconds")));
        }
        _super.prototype.stopContext.call(this);
    };
    BenchmarkReporter.prototype.startTest = function (test) {
        this.testBenchmarker.start();
        _super.prototype.startTest.call(this, test);
    };
    BenchmarkReporter.prototype.stopTest = function (error) {
        _super.prototype.stopTest.call(this, error);
        this.log(this.indent("  \u23F1\uFE0F  ".concat(this.testBenchmarker.getDuration(), " milliseconds"), true));
    };
    return BenchmarkReporter;
}(console_reporter_js_1.default));
exports.default = BenchmarkReporter;
